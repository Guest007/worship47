name: Worship47 TEST CI

on:
  push:
    branches:
      - 'master'
      - 'feature/*'
  pull_request:
    branches:
      - 'master'

jobs:
  test-with-pg-in-docker:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: ${{ secrets.SQL_DATABASE }}
          POSTGRES_USER: ${{ secrets.SQL_USER }}
          POSTGRES_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        ports:
          - 5432:5432
          # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'poetry'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        poetry install

    - name: Run Tests
      working-directory: ./src
      run: |
        poetry run pytest
      env:
        DEBUG: ${{ secrets.DEBUG }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
        SQL_USER: ${{ secrets.SQL_USER }}
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        SQL_PORT: ${{ secrets.SQL_PORT }}
        SQL_ENGINE: ${{ secrets.SQL_ENGINE }}
